{"swagger": "2.0", "info": {"title": "SPS API", "description": "Basic Django API Demo for SPSolutions", "contact": {"name": "juan_dm93@hotmail.com"}, "license": {"name": "MIT Licence"}, "version": "v1"}, "host": "sps-django-fly.fly.dev", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/accounts/": {"get": {"operationId": "accounts_list", "description": "", "parameters": [{"name": "account_id", "in": "query", "description": "", "required": false, "type": "number"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Account"}}}}, "tags": ["accounts"]}, "post": {"operationId": "accounts_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Account"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/{account_id}/": {"get": {"operationId": "accounts_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "put": {"operationId": "accounts_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Account"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "patch": {"operationId": "accounts_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Account"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Account"}}}, "tags": ["accounts"]}, "delete": {"operationId": "accounts_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "account_id", "in": "path", "required": true, "type": "integer"}]}, "/auth/login": {"post": {"operationId": "auth_login_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/me": {"get": {"operationId": "auth_me_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "put": {"operationId": "auth_me_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/register": {"post": {"operationId": "auth_register_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/token/refresh": {"post": {"operationId": "auth_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["auth"]}, "parameters": []}, "/customers/": {"get": {"operationId": "customers_list", "description": "", "parameters": [{"name": "username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email", "in": "query", "description": "", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Customer"}}}}, "tags": ["customers"]}, "post": {"operationId": "customers_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["customers"]}, "parameters": []}, "/customers/{username}/": {"get": {"operationId": "customers_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["customers"]}, "put": {"operationId": "customers_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["customers"]}, "patch": {"operationId": "customers_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["customers"]}, "delete": {"operationId": "customers_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["customers"]}, "parameters": [{"name": "username", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"Account": {"required": ["account_id", "limit"], "type": "object", "properties": {"account_id": {"title": "Account id", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "limit": {"title": "Limit", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}}}, "TokenObtainPair": {"required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true}}}, "Customer": {"required": ["username", "address", "email", "accounts"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "maxLength": 10, "minLength": 1}, "address": {"title": "Address", "type": "string", "maxLength": 32, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "accounts": {"$ref": "#/definitions/Account"}}}}}